// Generated by CoffeeScript 1.7.1
(function() {
  var EventEmitter, RssEmitter, feedparser, levelup, request,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  request = require('request');

  feedparser = require('feedparser');

  levelup = require('levelup');

  EventEmitter = require('events').EventEmitter;

  RssEmitter = (function(_super) {
    __extends(RssEmitter, _super);

    function RssEmitter(dbName) {
      this.db = levelup(dbName);
    }

    RssEmitter.prototype["import"] = function(url) {
      var fp, pipe, req, self;
      fp = new feedparser({
        addmeta: false
      });
      self = this;
      req = request(url);
      pipe = req.pipe(fp);
      return pipe.on('readable', function() {
        var item;
        item = this.read();
        return self.db.get(item.guid, function(err, value) {
          if (err) {
            return self.db.put(item.guid, '.', function(err) {
              return self.emit('item:new', item.guid, item);
            });
          } else {
            return self.emit('item:skipped', item.guid);
          }
        });
      });
    };

    return RssEmitter;

  })(EventEmitter);

  module.exports = RssEmitter;

}).call(this);
